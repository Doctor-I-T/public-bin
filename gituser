#

set healthium.gq chii.ml kintm.gq holosphere.gq keysm.ml gradual.gq bigtm.gq blockringtm.gq bringtm.ml clockchain.tk csap.ml current-see.ml dids.ml evolutiontm.tk gatetm.tk gcfs.ml gctm.gq gctm.ml glog.gq happycoin.gq happycoin.cf hellodoc.tk hltm.ml
tic=$(date +"%s")
d=$(expr \( $tic % $# \) + 1)
domain=$(eval echo \${$d})
echo domain: $domain

# bash only
#domains=(healthium.gq chii.ml keysm.ml)
#d=$(expr $tic % $3 )
#domain=${domains[$d]}

toplevel=$(git rev-parse --show-toplevel)
gitdir=$(git rev-parse --git-dir)
prefix=$(git rev-parse --show-prefix)
headid=$(cat $gitdir/HEAD | cut -d' ' -f2)
if git remote | grep -q origin; then
repo=$(git remote get-url origin | sed -e "s/git@.*\.github\.com:/git@github.com:/");
else
remote=$(git remote | head -1)
if [ "x$remote" != 'x' ]; then
repo=$(git remote get-url $remote);
else 
repo=$(git rev-parse --git-dir)
fi
fi
echo repo: $repo

#echo "committer: $(git config user.name) <$(git config user.email)>"

if git config user.name | grep -q '^michel'; then
githost=michelc
export GIT_AUTHOR_NAME="Michel"
export GIT_AUTHOR_EMAIL="michel@ocean"
#echo "author: $GIT_AUTHOR_NAME <$GIT_AUTHOR_EMAIL>"
else
peerid=$(ipfs config Identity.PeerID)
eval $(perl -S fullname.pl -a $repo | eyml)
git config committer.name "$fullname"
git config committer.email "$email"
export GIT_COMMITTER_NAME="$fullname"
export GIT_COMMITTER_EMAIL="$email"
githost=$user
#echo "author: $GIT_COMMITTER_NAME <$GIT_COMMITTER_EMAIL>"
fi
echo "git.author: "
git var GIT_AUTHOR_IDENT | sed -e 's/^/ /';
echo "git.commiter: "
git var GIT_COMMITTER_IDENT | sed -e 's/^/ /';

#prev=$(ipfs add -Q -w $gitdir/config )
if ! prev=$(git config ipfs.qm); then
prev=${prev:-QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn}
fi
if [ "x$IPFS_PATH" != 'x' ]; then
echo  IPFS_PATH: $IPFS_PATH
fi
if [ ! -e $HOME/.ipfsignore ]; then
# ipfs get -o $HOME/.ipfsignore QmUAf7KZ7NMYwajPrBG6g2VLxBmAjrnXXETMwjVbUsBmP5
  ipfs get -o $HOME/.ipfsignore QmUdRhGREmsnMcFCmcQWquZ6g6hnh11drhUCC62f1jFSiz
fi
if [ -e $gitdir/$headid ]; then
qm=$(ipfs add --ignore-rules-path=$HOME/.ipfsignore -Q -w --progress=true -r $gitdir/config $gitdir/$headid . )
else
qm=$(ipfs add --ignore-rules-path=$HOME/.ipfsignore -Q -w --progress=true -r $gitdir/config . )
fi
if ipfs files stat /ipfs/$prev; then
qm=$(ipfs object patch add-link $qm 'prev' $prev)
fi
echo qm: $qm


eval $(perl -S fullname.pl -a $qm | eyml)
echo firstname: $firstname
echo lni: $lni
tag=$(echo -n "$user@$domain" | ipfs add -Q --raw-leaves --hash identity --cid-base=base58btc)
echo tag: $tag

if git remote get-url origin 2>/dev/null | grep -e '\.github\.com:' | grep -q -v -e 'gist' 1>/dev/null;  then 
  remote=$(git remote get-url origin | sed -e "s/git@.*\.github\.com:/git@$githost.github.com:/");
  echo remote.origin: $remote
  git remote set-url origin $remote
fi
if git remote get-url github 2>/dev/null | grep -q -e '\.github\.com:' 1>/dev/null;  then 
  remote=$(git remote get-url github | sed -e "s/git@.*\.github\.com:/git@$githost.github.com:/");
  echo clone_url: $remote
  git remote set-url github $remote
fi


echo "git.user: $fullname <$user@$domain>"
git config user.name "$fullname"
git config user.email $user@$domain
git config ipfs.qm $qm
git config ipfs.prev $prev


