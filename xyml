#!/usr/bin/perl

local $/ = undef;
my $buf = <STDIN>;
use YAML::Syck qw(Load Dump);

our $dbug=0;
#understand variable=value on the command line...
eval "\$$1='$2'"while @ARGV&&$ARGV[0] =~ /^(\w+)=(.*)/ && shift;


$buf = "--- \n" . $buf if ($buf !~ m/^---/);
$buf =~ y/\t/ /;
#printf "buf: %s\n",$buf;

my $yml = Load($buf);
#printf "yml: %s\n",Dump($yml);

my $LF = ($#ARGV > 0) ? "\n" : '';
if (@ARGV) {
   foreach (@ARGV) {
      my $a = $_;
      $a =~ s/^([\w_\-]+)/{'$1'}/;
      $a =~ s/\.([\w_\-]+)/{'$1'}/g;
      $a = '$yml->'.$a;
      my $ref = eval("ref($a)");
      if ($dbug) {
         printf "a: %s\n",$a;
         printf "ref: '%s'\n",$ref;
      }
      if ($ref eq '') {
         printf "%s",eval "$a"; 
      } elsif ($ref eq 'ARRAY') {
         print Dump(eval("$a")),$LF;
      } elsif ($ref eq 'HASH') {
         print Dump(eval("$a")),$LF;
      } else {
         printf "ref(%s): %s\n",$a,eval "ref($a)"; 
         print eval("$a"),$LF;
         print Dump(eval("$a")),$LF;
      }
   }
} else {
 printf "%s...\n",YAML::Syck::Dump($yml);
}

exit $?;
1;
