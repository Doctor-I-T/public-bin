#!/usr/bin/perl

use Time::Local qw(timelocal);

my $tic = time;
my $wday = (localtime($tic))[6];
my ($hour,$mday,$mon,$yy) = (localtime($tic - $wday * 24 * 3600))[2..5];
printf "sunday: %s.%s.%s\n",$mday,$mon+1,1900+$yy;
my $monday = timelocal(0,0,0,$mday,$mon,1900+$yy) + 7/4 * 24 * 3600 - 1;

for my $i (0 .. 5) {
 my $t = $monday + ($i * 7/4) * 24 * 3600;
 #y $t = $monday + $d * 24 * 3600 + ($hour + 1) * 3600;
 my ($m,$r) = &rev($t);
 print "-- " if ($t > time);
 printf "%.2f: %s (v%.1f.%d)\n",($m+$r)/100,&hdate($t),$m/100,$m%10+$r;

}

exit $?;

# -----------------------------------------------------------------------
sub rev {
  my ($sec,$min,$hour,$mday,$mon,$yy,$wday,$yday) = (localtime($_[0]))[0..7];
  my $rweek=($yday+&fdow($_[0]))/7;
  my $rev_id = int($rweek) * 4; # 4 releases per week ...
  my $low_id = int(($wday+($hour/24)+$min/(24*60))*4/7);
  my $revision = ($rev_id + $low_id) / 100;
  return (wantarray) ? ($rev_id,$low_id) : $revision;
}
# -----------------------------------------------------------------------
sub fdow {
   my $tic = shift;
   ##     0    1     2    3    4     5     6     7
   #y ($sec,$min,$hour,$day,$mon,$year,$wday,$yday)
   my $year = (localtime($tic))[5]; my $yr4 = 1900 + $year ;
   my $first = timelocal(0,0,0,1,0,$yr4);
   $fdow = (localtime($first))[6];
   #printf "1st: %s -> fdow: %s\n",&hdate($first),$fdow;
   return $fdow;
}
# -----------------------------------------------------------------------
sub hdate { # return HTTP date (RFC-1123, RFC-2822) 
  my ($time,$delta) = @_;
  my $stamp = $time+$delta;
  my $tic = int($stamp);
  #my $ms = ($stamp - $tic)*1000;
  my $DoW = [qw( Sun Mon Tue Wed Thu Fri Sat )];
  my $MoY = [qw( Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec )];
  my ($sec,$min,$hour,$mday,$mon,$yy,$wday) = (localtime($tic))[0..6];
  my ($yr4,$yr2) =($yy+1900,$yy%100);

  # Mon, 01 Jan 2010 00:00:00 GMT
  my $date = sprintf '%3s, %02d %3s %04u %02u:%02u:%02u',
             $DoW->[$wday],$mday,$MoY->[$mon],$yr4, $hour,$min,$sec;
  return $date;
}
# -----------------------------------------------------------------------


1;
